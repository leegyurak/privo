-- V2__Add_indexes_and_constraints.sql
-- Additional indexes and constraints for better performance and data integrity

-- Add more specific indexes for common query patterns
CREATE INDEX idx_users_nickname_created ON users (nickname, created_at);

-- Add composite indexes for chat room queries
CREATE INDEX idx_chat_room_members_user_active ON chat_room_members (user_hashed_id, is_active, joined_at);
CREATE INDEX idx_chat_room_members_room_active ON chat_room_members (chat_room_id, is_active, role);

-- Add indexes for message pagination and filtering
CREATE INDEX idx_chat_messages_room_not_deleted_timestamp ON chat_messages (chat_room_id, is_deleted, timestamp DESC);
CREATE INDEX idx_chat_messages_sender_timestamp ON chat_messages (sender_hashed_id, timestamp DESC);

-- Add check constraints for data validation
ALTER TABLE users 
ADD CONSTRAINT chk_users_nickname_length 
CHECK (LENGTH(nickname) >= 2 AND LENGTH(nickname) <= 50);

ALTER TABLE users 
ADD CONSTRAINT chk_users_created_updated 
CHECK (updated_at >= created_at);

ALTER TABLE chat_room_members 
ADD CONSTRAINT chk_members_left_after_joined 
CHECK (left_at IS NULL OR left_at >= joined_at);

ALTER TABLE chat_room_members 
ADD CONSTRAINT chk_members_active_consistency 
CHECK ((is_active = TRUE AND left_at IS NULL) OR (is_active = FALSE AND left_at IS NOT NULL));

-- Add comments for documentation
ALTER TABLE users COMMENT = 'User accounts with encrypted authentication data';
ALTER TABLE chat_rooms COMMENT = 'Chat rooms for group or direct messaging';
ALTER TABLE chat_room_members COMMENT = 'Membership relationship between users and chat rooms';
ALTER TABLE chat_messages COMMENT = 'End-to-end encrypted chat messages';